#pragma once
#include "RSPGameManager.h"

// 컬러값 상수 지정
#define BLACK			0		// 검정색
#define BLUE			1		// 파란색
#define GREEN			2		// 초록색
#define	CYAN			3		// 옥색
#define RED				4		// 빨간색
#define MAGENTA			5		// 자주색
#define YELLOW			6		// 노란색
#define WHITE			7		// 흰색
#define GRAY			8		// 회색
#define LIGHT_BLUE		9		// 연한 파란색
#define LIGHT_GREEN		10		// 연한 초록색
#define LIGHT_CYAN		11		// 연한 옥색
#define LIGHT_RED		12		// 연한 빨간색
#define LIGHT_MAGENTA	13		// 연한 자주잭
#define LIGHT_YELLOW	14		// 연한 노란색
#define DARK_GRAY		15		// 진한 흰색

class RSPDrawUI
{
private:
	const int _HandSizeX = 32;
	const int _HandSizeY = 32;

	int _Rock[32 * 32] = {
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,0,7,7,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,7,0,0,0,7,7,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,7,7,7,7,7,0,0,0,0,7,7,0,0,0,0,7,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,7,7,0,0,7,7,0,0,0,0,7,7,0,0,0,0,7,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,7,0,0,0,0,7,0,0,0,0,7,7,7,7,0,0,7,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,7,0,0,0,0,7,7,0,0,0,7,0,7,7,7,7,7,7,0,0,0,0,0,0,
		0,0,0,0,0,7,7,7,7,7,0,0,0,0,7,0,7,7,7,0,0,0,0,7,7,7,7,0,0,0,0,0,
		0,0,0,0,7,7,0,0,7,7,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,
		0,0,0,0,7,0,0,0,0,7,7,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,
		0,0,0,0,7,0,0,0,0,0,7,0,0,7,7,0,0,0,0,0,0,7,7,0,0,0,0,7,7,0,0,0,
		0,0,0,0,7,7,0,0,0,0,7,7,0,0,7,0,0,0,0,7,0,7,7,0,0,0,0,0,7,0,0,0,
		0,0,0,0,7,7,7,0,0,0,0,7,7,7,0,7,7,7,7,7,7,7,0,0,0,0,0,0,7,0,0,0,
		0,0,0,0,7,0,7,7,0,0,0,7,7,7,7,0,7,7,0,0,7,7,0,0,0,0,0,0,7,0,0,0,
		0,0,0,0,7,0,0,7,7,0,7,7,7,0,0,0,7,7,0,0,0,0,7,7,0,0,0,0,7,0,0,0,
		0,0,0,0,7,7,0,0,7,7,7,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,
		0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,
		0,0,0,0,0,7,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,
		0,0,0,0,0,7,7,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,
		0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,
		0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	};
	int _Scissors[32 * 32] = {
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,0,7,7,0,7,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,7,7,0,0,7,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,7,0,0,7,7,0,0,0,0,7,0,0,0,7,7,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,7,7,0,0,0,7,7,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,7,0,0,7,7,0,0,0,7,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,7,7,0,7,7,0,0,0,7,7,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,7,7,0,0,0,7,7,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,7,7,7,0,0,0,7,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,7,7,7,0,0,0,7,7,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,7,7,7,7,7,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,7,7,0,0,7,7,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,7,7,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,7,7,0,0,0,0,7,7,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,
		0,0,0,0,0,0,0,0,7,7,0,0,0,0,7,7,7,7,7,7,7,7,7,0,0,7,7,0,0,0,0,0,
		0,0,0,0,0,0,7,7,7,7,7,0,0,0,7,7,0,0,7,7,7,0,0,0,0,7,7,0,0,0,0,0,
		0,0,0,0,0,0,7,0,0,0,7,7,0,0,0,7,7,7,7,0,0,0,0,0,0,7,7,0,0,0,0,0,
		0,0,0,0,0,7,7,0,0,0,0,7,7,0,0,7,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,
		0,0,0,0,0,7,7,0,0,0,0,7,7,7,0,7,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,
		0,0,0,0,0,7,7,0,7,0,0,0,7,7,7,7,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,
		0,0,0,0,0,0,7,0,7,7,0,0,7,0,7,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,
		0,0,0,0,0,0,7,7,0,7,7,7,7,7,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,
		0,0,0,0,0,0,0,7,7,0,0,7,7,0,0,0,7,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	};
	int _Paper[32 * 32] = {
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,0,0,0,7,7,7,7,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,7,7,7,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,0,7,7,7,0,7,0,0,0,7,7,0,0,7,7,0,0,7,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,7,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,7,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,7,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,7,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,7,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,
		0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	};

public:
	RSPDrawUI();
	~RSPDrawUI();

	void drawTitle(void);
	void drawInputError(void);
	int darwHandMenu(int posX, int posY);
	void drawResult(int result, int posX, int posY);
	void drawHand(int hand, int posX, int posY);

	void textColor(int font, int backGround);
	void outPutColorDot(int dotArray[], int posX, int posY, int sizeX, int sizeY);
	void gotoXY(int x, int y);
};

